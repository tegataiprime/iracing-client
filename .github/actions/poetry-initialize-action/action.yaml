name: 'Initilize Poetry'
description: 'Prepare a Virtual Environment for the Workflow'
inputs:
  python-version:
    description: "Version of Python to install"
    required: true
    deafult: '3.10'
outputs:
  cache-hit:
    description: "Using Cached Dependencies"
    value: ${{ steps.cached-poetry-dependencies.outputs.cache-hit }}
runs:
  using: "composite"
  steps:
    #-----------------------------------------------
    # Install Python
    #-----------------------------------------------
    - name: Set up python
      id: setup-python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.python-version }}

    #----------------------------------------------
    # Install & Configure Poetry  -----
    #----------------------------------------------
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true

    #----------------------------------------------
    # Load cached venv if cache exists
    #----------------------------------------------
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

    #----------------------------------------------
    # Install dependencies if cache does not exist
    #----------------------------------------------
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root
