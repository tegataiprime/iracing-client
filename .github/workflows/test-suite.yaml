name: test-suite

on: [workflow_dispatch, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      #----------------------------------------------
      #  -----  install & configure poetry  -----
      #----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      #----------------------------------------------
      #       load cached venv if cache exists
      #----------------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      #----------------------------------------------
      # install your root project, if required
      #----------------------------------------------
      - name: Install project
        run: poetry install --no-interaction
      #----------------------------------------------
      #             run linter
      #----------------------------------------------
      - name: Run Linter
        run: |
          source .venv/bin/activate
          poetry run pylint --fail-under=9 src/
      #----------------------------------------------
      #              run test suite
      #----------------------------------------------
      - name: Run Unit Tests
        run: |
          source .venv/bin/activate
          poetry run pytest tests/unit
          RESULT=$?
          echo "RESULT: $RESULT"
          if [ $RESULT -eq 5 ]; then
            echo "No tests to run."
            exit 0
          fi
      - name: Run Integration Tests
        env:
          IRACING_USERNAME: ${{ secrets.IRACING_USERNAME }}
          IRACING_PASSWORD: ${{ secrets.IRACING_PASSWORD }}
          IRACING_MEMBER_ID: ${{ secrets.IRACING_MEMBER_ID }}
        run: |
          source .venv/bin/activate
          poetry run pytest tests/integration
          RESULT=$?
          if [ $RESULT -eq 5 ]; then
            exit 0
          fi